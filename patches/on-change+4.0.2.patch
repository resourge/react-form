diff --git a/node_modules/on-change/index.js b/node_modules/on-change/index.js
index 158b7bf..326c613 100644
--- a/node_modules/on-change/index.js
+++ b/node_modules/on-change/index.js
@@ -1,6 +1,6 @@
 /* eslint-disable unicorn/prefer-spread */
-import {TARGET, UNSUBSCRIBE} from './lib/constants.js';
-import {isBuiltinWithMutableMethods, isBuiltinWithoutMutableMethods} from './lib/is-builtin.js';
+import { TARGET, UNSUBSCRIBE } from './lib/constants.js';
+import { isBuiltinWithMutableMethods, isBuiltinWithoutMutableMethods } from './lib/is-builtin.js';
 import path from './lib/path.js';
 import isSymbol from './lib/is-symbol.js';
 import isIterator from './lib/is-iterator.js';
@@ -26,7 +26,7 @@ const onChange = (object, onChange, options = {}) => {
 	};
 
 	const proxyTarget = Symbol('ProxyTarget');
-	const {equals, isShallow, ignoreDetached, details} = options;
+	const { equals, isShallow, ignoreDetached, details } = options;
 	const cache = new Cache(equals);
 	const hasOnValidate = typeof options.onValidate === 'function';
 	const smartClone = new SmartClone(hasOnValidate);
@@ -95,7 +95,9 @@ const onChange = (object, onChange, options = {}) => {
 			}
 
 			const value = isBuiltinWithMutableMethods(target)
-				? Reflect.get(target, property)
+				? target.constructor.name.includes('Date') && property !== 'constructor'
+					? Reflect.get(target, property, receiver).bind(target)
+					: Reflect.get(target, property)
 				: Reflect.get(target, property, receiver);
 
 			return prepareValue(value, target, property);
